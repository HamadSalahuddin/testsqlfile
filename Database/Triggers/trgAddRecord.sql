/*
Script generated by Aqua Data Studio 8.0.2 on Jan-15-2010 01:24:57 PM
Database: TrackerPal
Schema: <All Schemas>
Objects: TRIGGER
*/
CREATE TRIGGER [dbo].[trgAddRecord] 
   ON  [dbo].[AlarmAssignment]
   AFTER INSERT
AS
BEGIN
DECLARE @updateAlarmID int
	DECLARE @assignedID int
	DECLARE @operatorName nvarchar(50);
	DECLARE @lastUserID int
	
	set @updateAlarmID=(SELECT AlarmID FROM inserted)
	set @assignedID=(SELECT AssignedToID FROM inserted)
	set @operatorName=(SELECT FirstName+' '+LastName FROM operator WITH (NOLOCK) WHERE UserID=@assignedID)
	set @lastUserID=(select TOP 1 AssignedByID from AlarmAssignment WITH (NOLOCK) WHERE AlarmID=@updateAlarmID ORDER BY AssignedDate DESC)

	--check if the user assigning this alarm is the same user that had it last time
	if (@assignedID=@lastUserID OR @lastUserID is NULL) 
	BEGIN
		if ((select count(*) from rprtAlarmMonitorCenterSubGrid (NOLOCK) WHERE ParentAlarmID=@updateAlarmID)>0)
		BEGIN
		--insert new records for all subalarms for this alarm
				insert AlarmAssignment with (ROWLOCK) (AlarmID,AlarmAssignmentStatusID,AssignedToID,AssignedByID) 
					select ALarmID,(select AlarmAssignmentStatusID FROM inserted),@assignedID,@lastUserID 
					from rprtAlarmMonitorCenterSubGrid WHERE ParentAlarmID=@updateAlarmID
		END

		if((select AlarmAssignmentStatusID FROM inserted)=4)
		BEGIN
			
			DELETE  FROM dbo.rprtAlarmMonitorCenterGrid WHERE AlarmID=@updateAlarmID
			 
		END
		ELSE 
		BEGIN
			--update alarm status for the parent alarm
			IF((SELECT count(*) FROM rprtAlarmMonitorCenterGrid (NOLOCK) WHERE AlarmID= @updateAlarmID)>0)
			BEGIN
				UPDATE rprtAlarmMonitorCenterGrid WITH (ROWLOCK)
				SET AlarmAssignmentStatusID=(SELECT AlarmAssignmentStatusID from inserted),
				OperatorName=@operatorName,
				AssignedDate=(SELECT AssignedDate FROM inserted WHERE AlarmID=@updateAlarmID ),
				OperatorUserID=(SELECT AssignedByID FROM inserted WHERE AlarmID=@updateAlarmID) 
				WHERE  rprtAlarmMonitorCenterGrid.AlarmID=@updateAlarmID
			END 
		END
    END

--		BEGIN
--			-- Update alarm status for the Alarms by Status report.
--			UPDATE rptAlarmStatusReport
--			SET 
--				Status = aas.AlarmAssignmentStatusName, 
--				AssignedByID = @operatorName, --aa.AssignedByID, 
--				AlarmAssignmentStatusID = aa.AlarmAssignmentStatusID, 
--				AlarmAssignmentStatusName = aas.AlarmAssignmentStatusName
--				--Status = ISNULL(@status, 'New'),
--			FROM	
--				rptAlarmStatusReport rpt
--				LEFT JOIN AlarmAssignment aa ON aa.AlarmAssignmentID = (SELECT MAX(AlarmAssignmentID) FROM AlarmAssignment WHERE AlarmID = @updateAlarmID)
--				LEFT JOIN AlarmAssignmentStatus aas ON aas.AlarmAssignmentStatusID = aa.AlarmAssignmentStatusID
--			WHERE 
--				rpt.AlarmID = @updateAlarmID
--		END
--	END 
	ELSE
	BEGIN
		rollback transaction
	END		
			
	
END


GO
