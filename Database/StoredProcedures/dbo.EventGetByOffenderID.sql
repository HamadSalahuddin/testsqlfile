/*
Script generated by Aqua Data Studio 8.0.2 on Jan-15-2010 01:50:27 PM
Database: TrackerPal
Schema: <All Schemas>
Objects: PROCEDURE
*/
CREATE PROCEDURE [EventGetByOffenderID] (

	    @StartDate		  DATETIME,
	    @EndDate		  DATETIME,
	    @EventTypeID	  INT,
	    @OffenderID		  INT,
	    @SO				  INT,
	    @OPR			  INT,
	    @EventTypeGroupID INT 
    )
AS

/* ================================== DEVELOPMENT CODE BLOCK ===============================
-- // Declare and Set Test Vars // --
DECLARE @StartDate DATETIME,
        @EndDate DATETIME,
        @EventTypeID INT,
        @OffenderID INT,
        @SO INT,
        @OPR INT,
        @EventTypeGroupID INT
        
SET @StartDate = '11/8/2009'
SET @EndDate = '11/9/2009'
SET @EventTypeID = 0
SET @OffenderID = 1
SET @SO = 0
SET @OPR = 0
SET @EventTypeGroupID = 0;
 ================================ END DEV CODE BLOCK ===================================== */

-- // Define the CTE // --
WITH Events_CTE AS
(
    SELECT DeviceID,
        TrackerNumber,
        EventTime,
        EventDateTime,
        EventID,
        AlarmType,
        AlarmAssignmentStatusName,
        Longitude,
        Latitude,
        [Address],
        OffenderID,
        AlarmID,
        GpsValid,
        GpsValidSatellites,
        GeoRule,
        SO,
        OPR,
        EventTypeGroupID,
        OffenderName,
        OffenderDeleted        
    FROM rprtEventsBucket2
    WHERE EventDateTime BETWEEN @StartDate AND @EndDate 
      AND OffenderID = @OffenderID
    UNION
    SELECT DeviceID,
        TrackerNumber,
        EventTime,
        EventDateTime,
        EventID,
        AlarmType,
        AlarmAssignmentStatusName,
        Longitude,
        Latitude,
        [Address],
        OffenderID,
        AlarmID,
        GpsValid,
        GpsValidSatellites,
        GeoRule,
        SO,
        OPR,
        EventTypeGroupID,
        OffenderName,
        OffenderDeleted
    FROM rprtEventsBucket1
    WHERE EventDateTime BETWEEN @StartDate AND @EndDate 
      AND OffenderID = @OffenderID
/*
    SELECT * FROM rprtEventsBucket2 WHERE EventDateTime BETWEEN @StartDate AND @EndDate AND OffenderID = @OffenderID
    UNION
    SELECT * FROM rprtEventsBucket1 WHERE EventDateTime BETWEEN @StartDate AND @EndDate AND OffenderID = @OffenderID      
*/
)
SELECT * INTO #tmpEvent FROM Events_CTE

/* ============== Dev Use =============
SELECT * FROM #tmpEvent
DROP TABLE #tmpEvent
======================================*/

-- // Main Query // --
SELECT
    tEvent.DeviceID, 
	tEvent.TrackerNumber,
	tEvent.EventTime, 
	tEvent.EventDateTime,
	tEvent.EventID,
	ISNULL(tEvent.AlarmType, 1) AS 'AlarmType', -- 1: notification
	ISNULL(tEvent.[AlarmAssignmentStatusName],'Unassigned') AS 'AlarmAssignmentStatusName',
	EventType.AbbrevEventType as EventName,
	ISNULL(ROUND(tEvent.Longitude,5), 0) AS 'Longitude',
	ISNULL(ROUND(tEvent.Latitude,5), 0) AS 'Latitude',
	tEvent.Address AS 'Address',
	tEvent.OffenderName,
	tEvent.OffenderID,
	( (SELECT COUNT(AlarmNoteID) 
	   FROM AlarmNote 
	   WHERE AlarmID = tEvent.AlarmID ) + (SELECT COUNT(EventNoteID) 
	                                       FROM EventNote 
	                                       WHERE DeviceID = tEvent.DeviceID 
	                                         AND EventTime = tEvent.EventTime 
	                                         AND EventID = tEvent.EventID)
	) AS 'NoteCount',
--	( (SELECT COUNT (*) FROM AlarmNote WHERE AlarmID = tEvent.AlarmID ) + 
--	  (SELECT COUNT (*) FROM EventNote WHERE DeviceID = tEvent.DeviceID and EventTime = tEvent.EventTime and EventID = tEvent.EventID)
--	) AS 'NoteCount',
	tEvent.AlarmID,
	ISNULL(tEvent.GpsValid,0) AS 'GpsValid',
	ISNULL(tEvent.GpsValidSatellites,0) AS 'GpsValidSatellites',
	tEvent.GeoRule
FROM #tmpEvent tEvent
  INNER JOIN EventType ON EventType.EventTypeID = tEvent.EventID
WHERE 
  ((@EventTypeID < 0 ) OR (EventID = @EventTypeID))
  AND ((@SO < 0) OR (tEvent.SO = @SO))
  AND ((@OPR < 0) OR (tEvent.OPR = @OPR))
  AND ((@EventTypeGroupID < 0) OR (tEvent.EventTypeGroupID = @EventTypeGroupID ))
  AND tEvent.OffenderDeleted = 0
ORDER BY
    EventDateTime DESC, 
	AlarmType

-- // Clean up the temp table // --
DROP TABLE #tmpEvent

GO
GRANT EXECUTE ON [EventGetByOffenderID] TO [db_dml]
GO
