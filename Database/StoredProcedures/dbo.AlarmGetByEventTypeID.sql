/*
Script generated by Aqua Data Studio 8.0.2 on Jan-15-2010 01:50:27 PM
Database: TrackerPal
Schema: <All Schemas>
Objects: PROCEDURE
*/
CREATE PROCEDURE [AlarmGetByEventTypeID]


	@StartDate		BIGINT,
	@EndDate		BIGINT,
	@EventTypeID	INT,
	@SO				INT,
	@OPR			INT,
	@EventTypeGroupID int,
	@UserID INT = -1, 
	@RoleID INT = -1

AS
Select * 
INTO #tempalarmbeteventtype
From fnallevents () 
Where eventtime > = @StartDate And eventtime <= @Enddate
And Alarmtype > 1


	
IF @RoleID <> 6
	BEGIN
		SELECT
			a.AlarmID, 
			a.AlarmType AS 'AlarmTypeID', 
			a.EventTime,
			ISNULL(a.AlarmAssignmentStatusID,0) AS 'AlarmAssignmentStatusID',
			ISNULL(a.AlarmAssignmentStatusName,'Unassigned') AS 'AlarmAssignmentStatusName',
		--	(
		--		CASE
		--			WHEN a.EventTypeID = 256 AND a.EventParameter > 0
		--			THEN et.AbbrevEventType + ' ' + CONVERT(nvarchar(4),a.EventParameter)
		--			ELSE et.AbbrevEventType
		--		END
		--	) AS 'EventName', 
			a.EventName,
			ISNULL(ROUND(a.Longitude,5), 0) AS 'Longitude',
			ISNULL(ROUND(a.Latitude,5), 0) AS 'Latitude',
			ISNULL(a.Address, CONVERT(nvarchar(9),ISNULL(ROUND(a.Latitude,5), 0))+', '+CONVERT(nvarchar(9),ISNULL(ROUND(a.Longitude,5), 0)) ) AS 'Address',
		--	ISNULL(o.FirstName + ' ', '') + 
		--	ISNULL(o.MiddleName + ' ', '') + 
		--	ISNULL(o.LastName, '') AS 'OffenderName',
			a.OffenderName,
			a.OffenderID,
			(SELECT COUNT (*) FROM AlarmNote WHERE AlarmID = a.AlarmID) AS 'NoteCount',
				ISNULL(a.GpsValid,0) AS 'GpsValid',
				ISNULL(a.GpsValidSatellites,0) AS 'GpsValidSatellites',
			a.DeviceID, 
			a.EventID,
			(
				CASE
					WHEN a.EventTypeGroupID =5
					THEN a.GeoRule
					ELSE 'N/A'
				END
			) AS 'GeoRule'
       
		FROM
--			[fnEvents] ( [dbo].[ConvertLongToDate]( @StartDate ) , [dbo].[ConvertLongToDate]( @EndDate ) ) a
#tempalarmbeteventtype a		
--	LEFT JOIN EventType et ON a.EventTypeID = et.EventTypeID
		--	JOIN OffenderTrackerActivation ota on ota.OffenderID = a.OffenderID and ota.TrackerID =a.TrackerID 
		--		AND ((ota.activateDate< a.EventDisplayTime and ota.DeActivateDate> a.EventDisplayTime) 
		--			OR (ota.activateDate<a.EventDisplayTime and ota.DeActivateDate is null))
		--	LEFT JOIN Offender o ON a.OffenderID = o.OffenderID
		--	LEFT JOIN AlarmAssignment aa ON a.alarmId = aa.alarmid AND aa.AssignedDate = (SELECT MAX(AssignedDate) FROM AlarmAssignment AAD WHERE aad.AlarmID = a.AlarmID)
		--	LEFT JOIN AlarmAssignmentStatus aas ON aas.AlarmAssignmentStatusID = aa.AlarmAssignmentStatusID 
		--	LEFT JOIN GAteway.dbo.events e ON e.DeviceID = a.TrackerID AND e.EventTime = a.EventTime AND e. Eventid= a.eventtypeid
		--	LEFT JOIN GeoRule gr ON gr.GeoRuleID = a.EventParameter
		--	LEFT JOIN  agency ag ON a.AgencyID = ag.AgencyID
		--	LEFT JOIN  distributoremployee de on ag.DistributorID = de.DistributorID 
		WHERE
			a.AlarmType > 1 
			AND a.AlarmID NOT IN (SELECT AlarmID FROM AlarmAcknowledgement)
			AND (
				(@StartDate = 0 AND @EndDate = 0) 
				OR
				(a.EventTime >= @StartDate AND a.EventTime <= @EndDate)
			)
			AND	((@EventTypeID<0) OR (a.EventID = @EventTypeID))
			AND ((@SO<0) OR (a.SO=@SO))
			AND ((@OPR<0) OR (a.OPR=@OPR))
			AND	(
				(@EventTypeGroupID < 0)
				OR
				(a.EventTypeGroupID = @EventTypeGroupID )
			)
		ORDER BY
			a.EventTime DESC, a.AlarmType DESC 
	END
ELSE
BEGIN
		SELECT
			a.AlarmID, 
			a.AlarmType AS 'AlarmTypeID', 
			a.EventTime,
			ISNULL(a.AlarmAssignmentStatusID,0) AS 'AlarmAssignmentStatusID',
			ISNULL(a.AlarmAssignmentStatusName,'Unassigned') AS 'AlarmAssignmentStatusName',
		--	(
		--		CASE
		--			WHEN a.EventTypeID = 256 AND a.EventParameter > 0
		--			THEN et.AbbrevEventType + ' ' + CONVERT(nvarchar(4),a.EventParameter)
		--			ELSE et.AbbrevEventType
		--		END
		--	) AS 'EventName', 
			a.EventName,
			ISNULL(ROUND(a.Longitude,5), 0) AS 'Longitude',
			ISNULL(ROUND(a.Latitude,5), 0) AS 'Latitude',
			ISNULL(a.Address, CONVERT(nvarchar(9),ISNULL(ROUND(a.Latitude,5), 0))+', '+CONVERT(nvarchar(9),ISNULL(ROUND(a.Longitude,5), 0)) ) AS 'Address',
		--	ISNULL(o.FirstName + ' ', '') + 
		--	ISNULL(o.MiddleName + ' ', '') + 
		--	ISNULL(o.LastName, '') AS 'OffenderName',
			a.OffenderName,
			a.OffenderID,
			(SELECT COUNT (*) FROM AlarmNote WHERE AlarmID = a.AlarmID) AS 'NoteCount',
			ISNULL(a.GpsValid,0) AS 'GpsValid',
			ISNULL(a.GpsValidSatellites,0) AS 'GpsValidSatellites',
			a.DeviceID, 
			a.EventID,
			(
				CASE
					WHEN a.EventTypeGroupID =5
					THEN a.GeoRule
					ELSE 'N/A'
				END
			) AS 'GeoRule'
		
		FROM
--			[fnEvents] ( [dbo].[ConvertLongToDate]( @StartDate ) , [dbo].[ConvertLongToDate]( @EndDate ) ) a
#tempalarmbeteventtype a
		--	LEFT JOIN EventType et ON a.EventTypeID = et.EventTypeID
		--	JOIN OffenderTrackerActivation ota on ota.OffenderID = a.OffenderID and ota.TrackerID =a.TrackerID 
		--		AND ((ota.activateDate< a.EventDisplayTime and ota.DeActivateDate> a.EventDisplayTime) 
		--			OR (ota.activateDate<a.EventDisplayTime and ota.DeActivateDate is null))
		--	LEFT JOIN Offender o ON a.OffenderID = o.OffenderID
		--	LEFT JOIN AlarmAssignment aa ON a.alarmId = aa.alarmid AND aa.AssignedDate = (SELECT MAX(AssignedDate) FROM AlarmAssignment AAD WHERE aad.AlarmID = a.AlarmID)
		--	LEFT JOIN AlarmAssignmentStatus aas ON aas.AlarmAssignmentStatusID = aa.AlarmAssignmentStatusID 
		--	LEFT JOIN GAteway.dbo.events e ON e.DeviceID = a.TrackerID AND e.EventTime = a.EventTime AND e. Eventid= a.eventtypeid
		--	LEFT JOIN GeoRule gr ON gr.GeoRuleID = a.EventParameter
--			LEFT JOIN  agency ag ON a.AgencyID = ag.AgencyID
--			LEFT JOIN  distributoremployee de on ag.DistributorID = de.DistributorID AND de.UserID = @UserID
		WHERE
			a.AlarmType > 1 
			AND a.AlarmID NOT IN (SELECT AlarmID FROM AlarmAcknowledgement)
			AND (
				(@StartDate = 0 AND @EndDate = 0) 
				OR
				(a.EventTime >= @StartDate AND a.EventTime <= @EndDate)
			)
			AND	((@EventTypeID<0) OR (a.EventID = @EventTypeID))
			AND ((@SO<0) OR (a.SO=@SO))
			AND ((@OPR<0) OR (a.OPR=@OPR))
			AND	(
				(@EventTypeGroupID < 0)
				OR
				(a.EventTypeGroupID = @EventTypeGroupID )
			)
			AND a.AgencyID IN (SELECT AgencyID FROM Agency WHERE DistributorID IN (SELECT DistributorID FROM DistributorEmployee WHERE UserId = @UserId ) )
		ORDER BY
			a.EventTime DESC, a.AlarmType DESC 
	END
Drop table #tempalarmbeteventtype


GO
GRANT EXECUTE ON [AlarmGetByEventTypeID] TO [db_dml]
GO
GRANT VIEW DEFINITION ON [AlarmGetByEventTypeID] TO [db_object_def_viewers]
GO
