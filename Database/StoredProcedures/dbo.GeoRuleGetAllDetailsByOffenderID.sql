/*
Script generated by Aqua Data Studio 8.0.2 on Jan-15-2010 01:50:27 PM
Database: TrackerPal
Schema: <All Schemas>
Objects: PROCEDURE
*/
/* /////////////////////////////////////////////////////////// --
-- // FileName:     GeoRuleGetAllDetailsByOffenderID.sql	// --
-- // Created On:	unknown                                 // --
-- // Created By:   J.Barrus                                // --
-- // Task #:		                                        // --
-- // Purpose:      Return GeoRule Information by Offender  // --
-- //                                                       // --
-- //                                                       // --
-- // Modified By:  R.Cole - 11/12/2009                     // --
-- //               Added missing ZoneID, Revise query to   // --
-- //               remove SELECT *'s.                      // --
-- //               R.Cole - 11/13/2009                     // --
-- //               Add ISNULL checks to handle legacy data // -
-- *                SABBASI - 22/08/2013
-- *                Bug #1437; Added condition to exclude inactive rules from being returned in resultset.   
-- *                SABBASI - 28/11/2013
-- *                Bug #1437; Removed the condition to exclude inactive rules from being returned in resultset.
-- *				Task #3474; Added Agency Grace settings.
-- /////////////////////////////////////////////////////////// */

CREATE PROCEDURE [GeoRuleGetAllDetailsByOffenderID] (
    @OffenderID INT
)    
AS

SELECT	
    GeoRule.GeoRuleID,
    GeoRule.GeoRuleName,
    GeoRule.GeoRuleShapeID,
    GeoRule.GeoRuleTypeID,
    GeoRule.GeoRuleReferencePointID,
    GeoRule.GeoRuleScheduleID,
    GeoRule.Longitude,
    GeoRule.Latitude,
    GeoRule.Radius,
    GeoRule.Width,
    GeoRule.Height,
    GeoRule.Longitudes,
    GeoRule.Latitudes,
    GeoRule.AlarmInstructions,
    GeoRule.CreatedDate,
    ISNULL(GeoRule.ModifiedDate, GeoRule.CreatedDate) AS ModifiedDate,
    GeoRule.ModifiedByID,
    GeoRule.Deleted,
    GeoRule.StatusID,
    GeoRule.FileID,
    GeoRule.UpdateInProgress,
    ISNULL(GeoRule.Rotation,0) AS Rotation,
    GeoRuleSchedule.AlwaysOn,
    GeoRuleSchedule.StartTime,
    GeoRuleSchedule.EndTime,
    GeoRuleSchedule.Sunday,
    GeoRuleSchedule.Monday,
    GeoRuleSchedule.Tuesday,
    GeoRuleSchedule.Wednesday,
    GeoRuleSchedule.Thursday,
    GeoRuleSchedule.Friday,
    GeoRuleSchedule.Saturday, 
	GeoRuleReferencePoint.Street, 
	GeoRuleReferencePoint.City, 
	GeoRuleReferencePoint.StateID, 
	GeoRuleReferencePoint.PostalCode, 
	GeoRuleReferencePoint.CountryID, 
	GeoRuleReferencePoint.Latitude AS 'RefLatitude', 
	GeoRuleReferencePoint.Longitude AS 'RefLongitude',
	GeoRule_Offender.ZoneID,
	ISNULL(GeoRule_Offender.AreaID,0) AS AreaID,
		 grc.GraceID,
		 grc.GraceEarly,
		 grc.GraceLate,
		 grc.Deleted,
	Agency.GraceEarly AS "AgnGraceEarly",
    Agency.GraceLate AS "AgnGraceLate",
	Agency.GraceEnable,
	Agency.HealCount
FROM GeoRule  
  INNER JOIN GeoRule_Offender ON GeoRule.GeoRuleID = GeoRule_Offender.GeoRuleID
  INNER JOIN Offender ON Offender.OffenderID = GeoRule_Offender.OffenderID
  INNER JOIN Agency ON Offender.AgencyID = Agency.AgencyID
    LEFT JOIN Grace grc ON GeoRule_Offender.GraceID = grc.GraceID -- Added for Grace.
  LEFT JOIN GeoRuleSchedule ON GeoRule.GeoRuleScheduleID = GeoRuleSchedule.GeoRuleScheduleID
  LEFT JOIN GeoRuleReferencePoint ON GeoRule.GeoRuleReferencePointID = GeoRuleReferencePoint.GeoRuleReferencePointID

WHERE GeoRule_Offender.OffenderID = @OffenderID --AND GeoRule.StatusID <> 2
ORDER BY GeoRule.GeoRuleName
GO
GRANT EXECUTE ON [GeoRuleGetAllDetailsByOffenderID] TO [db_dml]
GO
