/*
Script generated by Aqua Data Studio 8.0.2 on Jan-15-2010 01:50:27 PM
Database: TrackerPal
Schema: <All Schemas>
Objects: PROCEDURE
*/
CREATE PROCEDURE [ReportDeviceSummarytest]
	@StartDate		DateTime,
	@EndDate		DateTime,
	@TimezoneOffset int

AS
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
DECLARE @RowNum int, @DayCount int, @DayOfWeek int,
	@DayBegin DateTime, @DayEnd DateTime, @DaylightOffset int,
--	@TotalDevices int, @TotalAvailable int, 
	@Rmas int, 
	@AssignedToAgencies int, @AssignmentsToAgencies int, @UnassignmentsToAgencies int, 
	@AssignedToOffenders int, @AssignmentsToOffenders int, @UnassignmentsToOffenders int,
	@TotalActive int, @Activations int, @Deactivations int
	
-- TrackerPal standard: All report @EndTime parameters are inclusive.  If time (not just date) is
-- relevant, parameter msut include seconds, and we add 1 second and use '<' on @EndDate
-- comparisons to include correct data.  This report day based.  Rule does not apply.  DK 4-9-07

SET @TimezoneOffset=-@TimezoneOffset
SET @RowNum = 0 
SET @DayCount = DATEDIFF( dd, @StartDate, @EndDate ) + 1
SET @DaylightOffset = 0

SET @StartDate = DATEADD( minute, @TimezoneOffset, @StartDate )

IF @StartDate >= (SELECT [Start] FROM DaylightSaving WHERE [Year] = YEAR(@StartDate))
AND @StartDate < (SELECT [End] FROM DaylightSaving WHERE [Year] = YEAR(@StartDate))
BEGIN
	SET @DaylightOffset = 60
END


DECLARE @Table TABLE (
	RowNum int,
	Date DateTime, [Day] varchar(30),
--	TotalDevices int, TotalAvailable int, 
	Rmas int, 
	AssignedToAgencies int, AssignmentsToAgencies int, UnassignmentsToAgencies int, 
	AssignedToOffenders int, AssignmentsToOffenders int, UnassignmentsToOffenders int,
	TotalActive int, Activations int, Deactivations int, DayBegin DateTime, DayEnd DateTime
)
	
WHILE @RowNum < @DayCount
BEGIN
	SET @DayBegin = DATEADD( minute, @RowNum*1440 + @DaylightOffset, @StartDate )
	SET @DayEnd = DATEADD( day, 1, @DayBegin )
	SET @RowNum = @RowNum + 1

	IF DATEPART(dayofyear, @DayBegin) = DATEPART( dayofyear, (SELECT [Start] FROM DaylightSaving WHERE [Year] = YEAR(@DayBegin)) )
	BEGIN
		SET @DaylightOffset = @DaylightOffset + 60
		SET @DayEnd = @DayEnd + @DaylightOffset
	END

	IF DATEPART(dayofyear, @DayBegin) = DATEPART( dayofyear, (SELECT [End] FROM DaylightSaving WHERE [Year] = YEAR(@DayBegin)) )
	BEGIN
		SET @DaylightOffset = @DaylightOffset - 60
		SET @DayEnd = @DayEnd + @DaylightOffset
	END

--		SET @TotalDevices = (
--			SELECT  
--				COUNT( DISTINCT d.DeviceID ) AS 'Total Devices'
--			FROM	
--				Gateway.dbo.Devices d
--				LEFT JOIN Gateway.dbo.DeviceProperties dp1 ON dp1.DeviceID = d.DeviceID AND dp1.propertyID='8410'
--				LEFT JOIN Gateway.dbo.DeviceProperties dp2 ON dp2.DeviceID = d.DeviceID AND dp2.propertyID='8411'
--			WHERE
--				d.Deleted = 0
----				AND DATEPART( dayofyear, d.CreateTime ) <= DATEPART( dayofyear, @DayBegin ) 
--				AND d.CreateTime <= DATEADD( dayofyear, 1, @DayBegin )
--				AND (dp1.PropertyValue = @GatewayIp OR @GatewayIp IS NULL)
--				AND (dp2.PropertyValue = @GatewayPort OR @GatewayPort IS NULL)
--		)
--		SET @TotalAvailable = (
--			SELECT  
--				COUNT( DISTINCT d.DeviceID ) AS 'Total Devices'
--			FROM	
--				Gateway.dbo.Devices d
--				LEFT JOIN Gateway.dbo.DeviceProperties dp1 ON dp1.DeviceID = d.DeviceID AND dp1.propertyID='8410'
--				LEFT JOIN Gateway.dbo.DeviceProperties dp2 ON dp2.DeviceID = d.DeviceID AND dp2.propertyID='8411'
--			WHERE
--				d.Deleted = 0
----				AND DATEPART( dayofyear, d.CreateTime ) <= DATEPART( dayofyear, @DayBegin ) 
--				AND d.CreateTime <= DATEADD( dayofyear, 1, @DayBegin )
--				AND (dp1.PropertyValue = @GatewayIp OR @GatewayIp IS NULL)
--				AND (dp2.PropertyValue = @GatewayPort OR @GatewayPort IS NULL)
--				AND d.DeviceID NOT IN (SELECT TrackerID FROM Tracker t WHERE Deleted = 0 AND t.RmaID IS NULL ) 
--		)
	SET @AssignedToAgencies = (
		SELECT  
			COUNT( DISTINCT t.TrackerID ) AS 'Total Assigned to Agencies'
		FROM	
			Tracker t
		WHERE
			t.CreatedDate <= @DayEnd
	)
	SET @AssignmentsToAgencies = (
		SELECT
			COUNT( DISTINCT TrackerID ) AS 'Assignments to Agencies'
		FROM
			Tracker t
		WHERE
			t.CreatedDate >= @DayBegin
			AND t.CreatedDate < @DayEnd
	)
	SET @UnassignmentsToAgencies = (
		SELECT
			COUNT( DISTINCT TrackerID ) AS 'Unassignments to Agencies'
		FROM
			Tracker t
		WHERE
			t.ModifiedDate >= @DayBegin
			AND t.ModifiedDate < @DayEnd
	)
	SET @AssignedToOffenders = (
		SELECT
			COUNT( DISTINCT ta.OffenderID ) AS 'Total Assigned to Offenders'
		FROM 
			TrackerAssignment ta
--			LEFT JOIN Offender o ON o.OffenderID = ta.OffenderID
		WHERE 
			AssignmentDate = (
				SELECT MAX(AssignmentDate)
				FROM TrackerAssignment 
				WHERE AssignmentDate <= @DayBegin AND TrackerID = ta.TrackerID
			)
			AND TrackerAssignmentTypeID = 1
	)
	SET @AssignmentsToOffenders = (
		SELECT
			COUNT( DISTINCT OffenderID ) AS 'Assignments to Offenders'
		FROM 
			TrackerAssignment
		WHERE
			AssignmentDate >= @DayBegin
			AND AssignmentDate < @DayEnd
			AND TrackerAssignmentTypeID = 1
	)
	SET @UnassignmentsToOffenders = (
		SELECT
			COUNT( DISTINCT OffenderID ) AS 'Unassignments to Offenders'
		FROM 
			TrackerAssignment
		WHERE
			AssignmentDate >= @DayBegin
			AND AssignmentDate < @DayEnd
			AND TrackerAssignmentTypeID = 2
	)
	SET @TotalActive = (
		SELECT
			COUNT( DISTINCT t.TrackerID ) AS 'TotalActive'
		FROM
			Tracker t 
			INNER JOIN OffenderTrackerActivation ota ON ota.TrackerID = t.TrackerID
				AND ota.ActivateDate <= @DayEnd
				AND (ota.DeactivateDate > @DayEnd OR ota.DeactivateDate IS NULL)
--		WHERE
--			t.CreatedDate <= @DayEnd
	)
	SET @Activations = (
		SELECT 
			COUNT( ota.ActivateDate ) AS 'Activations'
		FROM 
			OffenderTrackerActivation ota 
		WHERE 
			ota.ActivateDate >= @DayBegin
			AND ota.ActivateDate < @DayEnd
	)
	SET @Deactivations = (
		SELECT 
			COUNT( ota.DeactivateDate ) AS 'Deactivations' 
		FROM 
			OffenderTrackerActivation ota 
		WHERE 
			ota.DeactivateDate >= @DayBegin
			AND ota.DeactivateDate < @DayEnd
	)
	SET @Rmas = (
		SELECT  
			COUNT( DISTINCT d.DeviceID ) AS 'Total Devices'
		FROM	
			Gateway.dbo.Devices d
		WHERE
			d.CreateTime <= DATEADD( dayofyear, 1, @DayBegin )
			AND d.DeviceID IN (
				SELECT 
					t.TrackerID 
				FROM 
					Tracker t 
					LEFT JOIN TrackerRMA rma ON rma.CreatedDate = (SELECT MAX(CreatedDate) FROM TrackerRMA rma WHERE rma.TrackerID = t.TrackerID) 
				WHERE 
					t.RmaID IS NOT NULL 
					AND rma.CreatedDate <= DATEADD( dayofyear, 1, @DayBegin )
					AND rma.RemovedDate IS NULL
			)
	)

	SET @DayOfWeek = CONVERT( varchar(30), DATEPART( weekday, @DayBegin ) )
	INSERT INTO @Table (
		RowNum,
		Date,[Day], 
--			TotalDevices, TotalAvailable, 
		Rmas, 
		AssignedToAgencies, AssignmentsToAgencies, UnassignmentsToAgencies, 
		AssignedToOffenders, AssignmentsToOffenders, UnassignmentsToOffenders,
		TotalActive, Activations, Deactivations, DayBegin, DayEnd
	) 
	VALUES (
		@RowNum,
		CONVERT( varchar, DATEADD( minute, @TimezoneOffset, @DayBegin), 101 ), 
		CASE
			WHEN @DayOfWeek = 1 THEN 'Sunday'
			WHEN @DayOfWeek = 2 THEN 'Monday'
			WHEN @DayOfWeek = 3 THEN 'Tuesday'
			WHEN @DayOfWeek = 4 THEN 'Wednesday'
			WHEN @DayOfWeek = 5 THEN 'Thursday'
			WHEN @DayOfWeek = 6 THEN 'Friday'
			WHEN @DayOfWeek = 7 THEN 'Saturday'
		END,
--			@TotalDevices, @TotalAvailable, 
		@Rmas,
		@AssignedToAgencies, @AssignmentsToAgencies, @UnassignmentsToAgencies, 
		@AssignedToOffenders, @AssignmentsToOffenders, @UnassignmentsToOffenders,
		@TotalActive, @Activations, @Deactivations, @DayBegin, @DayEnd
	)
END

SELECT 	
--		RowNum,
	Date,[Day],Rmas,
	AssignedToAgencies, AssignmentsToAgencies, UnassignmentsToAgencies, 
	AssignedToOffenders, AssignmentsToOffenders, UnassignmentsToOffenders,
	TotalActive, Activations, Deactivations, DayBegin, DayEnd, rownum
FROM 
	@Table --ORDER BY Date DESC

GO
GRANT EXECUTE ON [ReportDeviceSummarytest] TO [db_dml]
GO
