/*
Script generated by Aqua Data Studio 8.0.2 on Jan-15-2010 01:50:27 PM
Database: TrackerPal
Schema: <All Schemas>
Objects: PROCEDURE
*/
CREATE PROCEDURE [BillingServiceGetByOffenderID] @OffenderID INT    
AS    
    
--Procedure returns data about and Agencies billing services.    
    
SET NOCOUNT ON;    
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;    
    
    
select offs.BillingServiceID as OffOptBillServID,         
obsoo.BillingServiceOptionID as OptBillServOptOffID, es.ID as eArrestServiceID, es.BeaconLimit,  
obsoo.BeaconCount, ebs.BillingStatus, cs.ServiceID      
from billingservice b  
inner join offender o on o.agencyid = b.agencyid  
left join dbo.billingserviceoption bso on bso.BillingServiceID = b.ID  
left  JOIN dbo.OffenderOptionalBillingService offs ON offs.OffenderID = o.OffenderID and b.id=offs.billingserviceid  
left join dbo.OptionalBillingServiceOptionOffender obsoo ON obsoo.OffenderID = o.OffenderID and obsoo.BillingServiceOptionID = bso.ID  
--left JOIN dbo.ClassicBillingService cs ON offs.BillingServiceID = cs.BillingServiceID          
left JOIN dbo.ClassicBillingService cs ON b.ID = cs.BillingServiceID  
LEFT JOIN dbo.EArrestService es ON cs.ID = es.ClassicBillingServiceID         
left join (Select OffenderID, MAX(ID) As lastid From EArrestBillingStatus Group BY Offenderid) ebs1 ON ebs1.OffenderID=o.OffenderID  
LEFT JOIN EarrestBillingStatus ebs ON ebs.id = ebs1.lastid  
where o.offenderid = @Offenderid
and   (offs.BillingServiceID is not null or obsoo.BillingServiceOptionID is not null)  
AND (not(obsoo.BillingServiceOptionID is null and cs.ServiceID!=4 ))
--ORDER BY b.ID desc

--select  TOP 1 offs.BillingServiceID as OffOptBillServID,         
--obsoo.BillingServiceOptionID as OptBillServOptOffID, es.ID as eArrestServiceID, es.BeaconLimit,  
--obsoo.BeaconCount, ebs.BillingStatus, cs.ServiceID      
--from billingservice b  
--inner join offender o on o.agencyid = b.agencyid  
--left join dbo.billingserviceoption bso on bso.BillingServiceID = b.ID  
--left  JOIN dbo.OffenderOptionalBillingService offs ON offs.OffenderID = o.OffenderID and b.id=offs.billingserviceid  
--left join dbo.OptionalBillingServiceOptionOffender obsoo ON obsoo.OffenderID = o.OffenderID and obsoo.BillingServiceOptionID = bso.ID  
----left JOIN dbo.ClassicBillingService cs ON offs.BillingServiceID = cs.BillingServiceID          
--left JOIN dbo.ClassicBillingService cs ON b.ID = cs.BillingServiceID  
--LEFT JOIN dbo.EArrestService es ON cs.ID = es.ClassicBillingServiceID         
--left join (Select OffenderID, MAX(ID) As lastid From EArrestBillingStatus Group BY Offenderid) ebs1 ON ebs1.OffenderID=o.OffenderID  
--LEFT JOIN EarrestBillingStatus ebs ON ebs.id = ebs1.lastid  
--where o.offenderid = @Offenderid
--and   (offs.BillingServiceID is not null or obsoo.BillingServiceOptionID is not null)  
--AND (not(obsoo.BillingServiceOptionID is null and cs.ServiceID!=4 ))
--ORDER BY b.ID desc

GO
GRANT EXECUTE ON [BillingServiceGetByOffenderID] TO [db_dml]
GO
