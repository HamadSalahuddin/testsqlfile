/*
Script generated by Aqua Data Studio 8.0.2 on Jan-15-2010 01:50:27 PM
Database: TrackerPal
Schema: <All Schemas>
Objects: PROCEDURE
*/
CREATE PROCEDURE [ReportTrackerPalDailyAlarm]
        @StartDate              DateTime,
        @EndDate                DateTime,
        @SO                             INT,
        @OPR                    INT,
        @TimeZoneOffset INT

AS
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
/*table 1 */

DECLARE
@TableTemp1
TABLE 
(
 EventDisplayTime varchar(10) , CallOut int
)

INSERT INTO 
@TableTemp1 
(
EventDisplayTime , CallOut
)

SELECT
        convert (varchar, DATEADD ( mi, @TimeZoneOffset,   Convert(DateTime,
        (DATEADD(ms, (e.EventTime / CAST(10000 AS bigint)) % 86400000,
        DATEADD(day, e.EventTime / CAST(864000000000 AS bigint) - 109207, 0))))),101),

        count(e.eventid  )
        FROM Gateway.dbo.events e
    LEFT JOIN EventType et ON e.EventID = et.EventTypeID
                        
    wHERE e.eventid=112
                and
                    (
                        (@StartDate = 0 AND @EndDate = 0)
                        OR
                        (
                                ( Convert(DateTime,
        (DATEADD(ms, (e.EventTime / CAST(10000 AS bigint)) % 86400000,
        DATEADD(day, e.EventTime / CAST(864000000000 AS bigint) - 109207, 0)))) >= @StartDate)
                                AND
                                ( Convert(DateTime,
        (DATEADD(ms, (e.EventTime / CAST(10000 AS bigint)) % 86400000,
        DATEADD(day, e.EventTime / CAST(864000000000 AS bigint) - 109207, 0)))) <= @EndDate)
                        )
                )
                AND 
                (
                        (@SO < 0)
                        OR
                        (et.SO = @SO)
                )
                AND 
                (
                        (@OPR < 0)
                        OR
                        (et.OPR = @OPR)
                )
        GROUP BY 
      convert(varchar, DATEADD ( mi, @TimeZoneOffset, Convert(DateTime,
        (DATEADD(ms, (e.EventTime / CAST(10000 AS bigint)) % 86400000,
        DATEADD(day, e.EventTime / CAST(864000000000 AS bigint) - 109207, 0))))),101)

    

/**/

/*table 2 */


DECLARE
@TableTemp2
TABLE 
(
 EventDisplayTime varchar(10) , CallIn int
)

INSERT INTO 
@TableTemp2
(
EventDisplayTime , CallIn
)

SELECT
        convert (varchar, DATEADD ( mi, @TimeZoneOffset,   Convert(DateTime,
        (DATEADD(ms, (e.EventTime / CAST(10000 AS bigint)) % 86400000,
        DATEADD(day, e.EventTime / CAST(864000000000 AS bigint) - 109207, 0))))),101),

        count(e.eventid  )
        FROM Gateway.dbo.events e
    LEFT JOIN EventType et ON e.EventID = et.EventTypeID
                        
    wHERE e.eventid=120
                and
                    (
                        (@StartDate = 0 AND @EndDate = 0)
                        OR
                        (
                                ( Convert(DateTime,
        (DATEADD(ms, (e.EventTime / CAST(10000 AS bigint)) % 86400000,
        DATEADD(day, e.EventTime / CAST(864000000000 AS bigint) - 109207, 0)))) >= @StartDate)
                                AND
                                ( Convert(DateTime,
        (DATEADD(ms, (e.EventTime / CAST(10000 AS bigint)) % 86400000,
        DATEADD(day, e.EventTime / CAST(864000000000 AS bigint) - 109207, 0)))) <= @EndDate)
                        )
                )
                AND 
                (
                        (@SO < 0)
                        OR
                        (et.SO = @SO)
                )
                AND 
                (
                        (@OPR < 0)
                        OR
                        (et.OPR = @OPR)
                )
        GROUP BY 
      convert(varchar, DATEADD ( mi, @TimeZoneOffset, Convert(DateTime,
        (DATEADD(ms, (e.EventTime / CAST(10000 AS bigint)) % 86400000,
        DATEADD(day, e.EventTime / CAST(864000000000 AS bigint) - 109207, 0))))),101)

    
/**/

        SELECT TOP 5000	
                CONVERT(varchar, dateaDD(mi, @TimeZoneOffset, (Convert(DateTime,a.EventDisplayTime))), 101) as 'Date',
                DATEPART(Dw, (DATEADD(mi, @TimeZoneOffset, (Convert(DateTime,a.EventDisplayTime))))) AS 'DayOfWeek',
                 isnull(tt.CallOut,0) as 'CallOut',
                 isnull(tt2.CallIn,0) as 'CallIn',
                COUNT(a.alarmID) as 'Alarms',
                SUM(case WHEN(aa.AlarmAssignmentID is null) then 0 else 1  END) as 'AlarmsAccepted',
                SUM(case when(a.createddate is null ) THEN 0 ELSE CASE WHEN Convert(BIGINT,DATEDIFF(ss,a.EventDisplayTime,a.createddate)) < 0 THEN 0 ELSE Convert(BIGINT,DATEDIFF(ss,a.EventDisplayTime,a.createddate)) END END) as 'AverageLatency',
                SUM(case when (aa.AssignedDate is null) then 0 else Convert(BIGINT,DATEDIFF(ss,a.EventDisplayTime,aa.AssignedDate))end ) as 'AverageOperatorAcceptTime'
        FROM    
                alarm a
                JOIN offenderTrackerActivation ota ON ota.OffenderID = a.OffenderID 
                AND ota.TrackerID = a.TrackerID
                AND(
                (ota.ActivateDate < a.EventDisplayTime AND ota.DeActivateDate > a.EventDisplayTime)
                OR
                (ota.ActivateDate < a.EventDisplayTime AND ota.DeActivateDate IS NULL)                
                )
                LEFT JOIN AlarmAssignment aa ON aa.Alarmid = a.Alarmid
                LEFT JOIN EventType et ON a.EventTypeID = et.EventTypeID
                                left join @TableTemp1 tt on tt.EventDisplayTime =convert(varchar,dateaDD ( mi, @TimeZoneOffset, (Convert(DateTime,a.EventDisplayTime))),101)
                        left join @TableTemp2 tt2 on tt2.EventDisplayTime =convert( varchar,dateaDD ( mi, @TimeZoneOffset, (Convert(DateTime,a.EventDisplayTime))),101)
        
        WHERE
                (
                        (@StartDate = 0 AND @EndDate = 0)
                        OR
                        (
                                (a.EventDisplayTime >= @StartDate)
                                AND
                                (a.EventDisplayTime <= @EndDate)
                        )
                )
                AND 
                (
                        (@SO < 0)
                        OR
                        (et.SO = @SO)
                )
                AND 
                (
                        (@OPR < 0)
                        OR
                        (et.OPR = @OPR)
                )
        GROUP BY 
                CONVERT(varchar,dateaDD ( mi, @TimeZoneOffset, (Convert(DateTime,a.EventDisplayTime))),111),
                CONVERT(varchar,dateaDD ( mi, @TimeZoneOffset, (Convert(DateTime,a.EventDisplayTime))),101),
                DATEPART(Dw, (DATEADD ( mi, @TimeZoneOffset, (Convert(DateTime,a.EventDisplayTime))))) ,
                                tt.Callout,
                                tt2.CallIn
                                
        ORDER BY 
                CONVERT(varchar,dateaDD ( mi, @TimeZoneOffset, (Convert(DateTime,a.EventDisplayTime))),111) asc
GO
GRANT VIEW DEFINITION ON [ReportTrackerPalDailyAlarm] TO [db_object_def_viewers]
GO
GRANT EXECUTE ON [ReportTrackerPalDailyAlarm] TO [db_dml]
GO
