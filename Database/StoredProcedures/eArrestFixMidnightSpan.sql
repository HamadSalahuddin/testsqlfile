/*
Script generated by Aqua Data Studio 8.0.2 on Jan-15-2010 01:50:27 PM
Database: TrackerPal
Schema: <All Schemas>
Objects: PROCEDURE
*/
-- =============================================
-- Author:		Rick Bertelsen
-- Create date: Nov. 4, 2008
-- Description:	Fix the spanning midnight problem with eArrest
-- =============================================
CREATE PROCEDURE [eArrestFixMidnightSpan] 
	-- Add the parameters for the stored procedure here

AS

DECLARE @RuleID				int
DECLARE @SchedID1			int
DECLARE @SchedID2			int
DECLARE @TimeZoneYes		bit
DECLARE @UTCTimeZoneOffset	int
DECLARE @UTCOffset			int
DECLARE @LocalStartDate		datetime
DECLARE @UTCStartDate		datetime

BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE RickHackCursor CURSOR FAST_FORWARD FOR
		select distinct 
			s1.RuleID,
			s1.ID as 'ID1',
			s2.ID as 'ID2'
		from Schedule s1 (nolock)
		inner join Schedule s2 (nolock) on s1.ruleid = s2.ruleid and s2.enddatetime > s1.startdatetime and s1.ID - 1 = s2.ID
		inner join  [Rule] r (NOLOCK) on r.ID = s1.RuleID and r.ID = s2.RuleID
		inner join ERule er (NOLOCK) on r.ID = er.RuleID
		inner join BeaconOffender bo (NOLOCK) on bo.BeaconID = er.BeaconID
		inner join OffenderTrackerActivation ota (NOLOCK) on ota.OffenderID = bo.OffenderID
		where ota.DeActivateDate is null
				and (((datediff(mi, s1.startdatetime, s2.enddatetime) = 5260319)) or (datepart(mi, s2.enddatetime) = 59))

	OPEN RickHackCursor

	FETCH NEXT FROM RickHackCursor INTO @RuleID, @SchedID1, @SchedID2

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		IF ((DATEADD(DAY, 1, (SELECT EndDateTime FROM Schedule WHERE ID = @SchedID1))) IS NULL)
		BEGIN
			SELECT @SchedID1 as 'ScheduleID1', @SchedID2 as 'ScheduleID2', @RuleID as 'RuleID', (SELECT EndDateTime FROM Schedule WHERE ID = @SchedID1) as 'EndDateTime'
		END
		ELSE 
		BEGIN
			UPDATE Schedule SET EndDateTime = 
					DATEADD(DAY, 1, (SELECT EndDateTime FROM Schedule WHERE ID = @SchedID1))
				WHERE ID = @SchedID2
			DELETE Schedule WHERE ID = @SchedID1
		END
--		UPDATE ScheduleRepeatedDay SET DayID = CASE
--														WHEN DayID = 1 Then 7
--														ELSE DayID - 1 END
--			WHERE ScheduleID = @SchedID2
		FETCH NEXT FROM RickHackCursor INTO @RuleID, @SchedID1, @SchedID2
	END

	CLOSE RickHackCursor
	DEALLOCATE RickHackCursor

	DECLARE RickHackCursor2 CURSOR FAST_FORWARD FOR 
		SELECT ID, StartDateTime, RuleID
			FROM Schedule (NOLOCK)
			WHERE AlwaysOn = 0

	OPEN RickHackCursor2
	FETCH NEXT FROM RickHackCursor2 INTO @SchedID1, @UTCStartDate, @RuleID
	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		SELECT @TimeZoneYes = a.DaylightSavings, @UTCOffset = tz.UTCOffset, @UTCTimeZoneOffset = tz.DaylightUtcOffset
			FROM ERule er (NOLOCK)
				INNER JOIN BeaconOffender bo (NOLOCK) on er.BeaconID = bo.BeaconID
				INNER JOIN Offender o (NOLOCK) on bo.OffenderID = o.OffenderID
				INNER JOIN Agency a (NOLOCK) on o.AgencyID = a.AgencyID
				INNER JOIN TimeZone tz (NOLOCK) on a.TimeZoneID = tz.TimeZoneID
			WHERE er.RuleID = @RuleID
		IF (@TimeZoneYes = 1)
		BEGIN
			SELECT @LocalStartDate = DATEADD(MI, @UTCTimeZoneOffset, @UTCStartDate)
		END
		ELSE
		BEGIN
			SELECT @LocalStartDate = DATEADD(MI, @UTCOffset, @UTCStartDate)
		END
		IF ((DATEPART(dy, @LocalStartDate)) <> (DATEPART(dy, @UTCStartDate)))
		BEGIN
			UPDATE ScheduleRepeatedDay SET DayID = CASE
														WHEN DayID = 6 THEN 1
														WHEN DayID = 7 THEN 2
														ELSE DayID + 2 END
				WHERE ScheduleID = @SchedID1
		END
		FETCH NEXT FROM RickHackCursor2 INTO @SchedID1, @UTCStartDate, @RuleID
	END

	CLOSE RickHackCursor2
	DEALLOCATE RickHackCursor2

END


GO
GRANT EXECUTE ON [eArrestFixMidnightSpan] TO [db_dml]
GO
